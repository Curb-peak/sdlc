const path = require('path');

function delete_tags(program) {

  const service_path = path.resolve('__dirname', '../../../');
  console.log('service_path', service_path)
  process.chdir(service_path)
  const options = program.opts();
  console.log('options', options)
}

function versions(program) {
  console.log('read config from %s', program.opts().config);
}

module.exports = function create_command(program) {

  program
    .command('env [env] [service]')
      .description('manage infrastructure and view critical Environment specific information')
      .option('-dt, --delete-tags', 'wraps terraform ops deployments to aws for ease of use')
      .option('-v, --versions', 'display a list of services and their current branch versions')
      .option('-i, --infrastructure', 'display infrastructure information and relevant statistics')
      .option('-d, --deploy <service> <version>', 'deploy a service at a specific version to an Environment')
      .option('-l, --logs <service>', 'wraps terraform ops deployments to aws for ease of use')
      .action((env, options) => {
        env = env || 'all';
        delete_tags(program);
        versions(program);
        console.log('setup for %s env(s) with %s mode', env, options.setup_mode);
      }).addHelpText('after', `
      Examples:
        $ deploy exec sequential
        $ deploy exec async`
      );
}
